version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: tasktracker_mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: tasktracker
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    networks:
      - tasktracker_network

  # Redis for Caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: tasktracker_redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - tasktracker_network

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: tasktracker_backend
    restart: unless-stopped
    environment:
      NODE_ENV: development
      PORT: 5000
      MONGODB_URI: mongodb://admin:password123@mongodb:27017/tasktracker?authSource=admin
      JWT_SECRET: your_super_secret_jwt_key_here
      JWT_EXPIRES_IN: 7d
      FRONTEND_URL: http://localhost:3000
      REDIS_URL: redis://redis:6379
    ports:
      - "5000:5000"
    volumes:
      - ./logs:/app/logs
    depends_on:
      - mongodb
      - redis
    networks:
      - tasktracker_network

  # Frontend (React)
  frontend:
    image: node:18-alpine
    container_name: tasktracker_frontend
    working_dir: /app
    environment:
      REACT_APP_API_URL: http://localhost:5000/api
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
    command: sh -c "npm install && npm start"
    depends_on:
      - backend
    networks:
      - tasktracker_network

volumes:
  mongodb_data:
  redis_data:

networks:
  tasktracker_network:
    driver: bridge